plugins {
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // querydsl plugins 추가
    id 'eclipse'
    id 'java'
}

group = 'backend.ssr.ddd'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation('org.mariadb.jdbc:mariadb-java-client')
    implementation('org.springframework.boot:spring-boot-configuration-processor')
    implementation 'org.projectlombok:lombok'
    // jpa 설정 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-devtools'
    // swagger2 설정 추가
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'
    // Querydsl 추가 시작
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-apt'
    // security 설정
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    // 로그인 확인용 머스테치
    implementation 'org.springframework.boot:spring-boot-starter-mustache'
    //s3
    implementation'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

/*
 * queryDSL 설정 추가
 */
// querydsl에서 사용할 경로 설정
def querydslDir = "$buildDir/generated/querydsl"

// JPA 사용 여부와 사용할 경로를 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

// build 시 사용할 sourceSet 추가
sourceSets {
    main.java.srcDir querydslDir
}

// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

// querydsl 이 compileClassPath 를 상속하도록 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}